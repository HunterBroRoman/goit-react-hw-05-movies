{"version":3,"file":"static/js/Home.0df90345.chunk.js","mappings":"sMA8BA,UA1Ba,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,KAAKL,EAC9B,GAAE,KAGD,iCACE,2CACCD,EAAeO,OAAS,IACvB,wBACGP,EAAeQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMX,GAA1C,SACGQ,KAFID,EADS,QAW7B,C,6KCvBKK,EAAY,kCACZC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QALiB,gCAOjB,IAAMC,EAAoB,WACxB,OAAOD,EAAAA,EAAAA,IAAA,sCAC+BD,EAD/B,YAEJT,MAAK,qBAAGY,KAAQC,QACPX,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,GADR,IAGLU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEKC,EAAkB,SAAAC,GACtB,OAAOV,EAAAA,EAAAA,IAAA,gCAEsBD,EAFtB,iCAEsDW,EAFtD,YAIJpB,MAAK,qBAAGY,KAAQC,QACPX,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,GADR,IAGLU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEKG,EAAkB,SAAAC,GACtB,OAAOZ,EAAAA,EAAAA,IAAA,iBACUY,EADV,oBAC6Bb,IACjCT,MACC,oBACEY,KACET,EAFJ,EAEIA,GACAC,EAHJ,EAGIA,MACcmB,EAJlB,EAIIC,aACaC,EALjB,EAKIC,YACAC,EANJ,EAMIA,SACAC,EAPJ,EAOIA,OACcC,EARlB,EAQIC,aARJ,MAUO,CACL3B,GAAAA,EACAC,MAAAA,EACAmB,YAAa,IAAIQ,KAAKR,GAAaS,cACnCP,OAAQjB,EAAYiB,EACpBE,SAAAA,EACAC,OAAAA,EACAC,UAAWI,KAAKC,MAAkB,GAAZL,GAjBxB,IAoBDf,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEKiB,EAAkB,SAAAb,GACtB,OAAOZ,EAAAA,EAAAA,IAAA,iBACUY,EADV,4BACqCb,IACzCT,MAAK,qBAAGY,KAAQwB,KACVlC,KAAI,gBAAGC,EAAH,EAAGA,GAAIkC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAyBC,EAAtC,EAAwBC,aAAxB,MAAmD,CAC1DrC,GAAAA,EACAkC,KAAAA,EACAC,UAAAA,EACAC,MAAOA,EAAQ/B,EAAY+B,EAAQE,EAJ5B,GADL,IAQL3B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEKwB,EAAkB,SAAApB,GACtB,OAAOZ,EAAAA,EAAAA,IAAA,iBACUY,EADV,4BACqCb,IACzCT,MAAK,qBAAGY,KAAQC,QACPX,KAAI,kBAA8B,CAAEC,GAAhC,EAAGA,GAAiCwC,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,QAAf,GADR,IAGL9B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,C","sources":["pages/Home/Home.jsx","services/tmdb-api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as api from 'services/tmdb-api';\n\nconst Home = () => {\n  const [trandingMovies, setTrandingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    api.getTrendingMovies().then(setTrandingMovies);\n  }, []);\n\n  return (\n    <>\n      <h2>Tranding today</h2>\n      {trandingMovies.length > 0 && (\n        <ul>\n          {trandingMovies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport photoHolder from 'images/ava.jpg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// https://image.tmdb.org/t/p/w400/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\nconst API_KEY = '5ce599886a4c0703a030654068991e03';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}&page=1`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getSearchMovies = query => {\n  return axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n    )\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n          release_date: releaseYear,\n          poster_path: poster,\n          overview,\n          genres,\n          vote_average: userScore,\n        },\n      }) => ({\n        id,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        poster: IMAGE_URL + poster,\n        overview,\n        genres,\n        userScore: Math.round(userScore * 10),\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMAGE_URL + photo : photoHolder,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({ id, author, content }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};"],"names":["useState","trandingMovies","setTrandingMovies","location","useLocation","useEffect","api","then","length","map","id","title","to","state","from","IMAGE_URL","API_KEY","axios","getTrendingMovies","data","results","catch","error","console","log","message","getSearchMovies","query","getMovieDetails","movieId","releaseYear","release_date","poster","poster_path","overview","genres","userScore","vote_average","Date","getFullYear","Math","round","getMovieCredits","cast","name","character","photo","profile_path","photoHolder","getMovieReviews","author","content"],"sourceRoot":""}