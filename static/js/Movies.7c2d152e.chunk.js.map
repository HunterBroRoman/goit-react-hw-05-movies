{"version":3,"file":"static/js/Movies.7c2d152e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport * as api from 'services/api';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && api.getSearchMovies(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await api.getSearchMovies(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\nimport photoHolder from 'images/ava.jpg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\nconst API_KEY = '8a7300a64d51a4763298450a1c448d8d';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}&page=1`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getSearchMovies = query => {\n  return axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n    )\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n          release_date: releaseYear,\n          poster_path: poster,\n          overview,\n          genres,\n          vote_average: userScore,\n        },\n      }) => ({\n        id,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        poster: IMAGE_URL + poster,\n        overview,\n        genres,\n        userScore: Math.round(userScore * 10),\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMAGE_URL + photo : photoHolder,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({ id, author, content }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","api","handleSubmit","fn","e","preventDefault","response","self","this","args","arguments","apply","err","undefined","onSubmit","type","onChange","target","length","map","id","title","to","state","from","IMAGE_URL","API_KEY","axios","getTrendingMovies","data","results","catch","console","log","message","getSearchMovies","getMovieDetails","movieId","releaseYear","release_date","poster","poster_path","overview","genres","userScore","vote_average","Date","getFullYear","Math","round","getMovieCredits","cast","name","character","photo","profile_path","photoHolder","getMovieReviews","author","content"],"sourceRoot":""}